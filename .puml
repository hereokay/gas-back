@startuml

package "domain" {
    class EthereumPrice {
        - String id
        - Long date
        - String price
        + getId() : String
        + setId(id : String)
        + getDate() : Long
        + setDate(date : Long)
        + getPrice() : String
        + setPrice(price : String)
    }

    class GasCostSummary {
        - BigDecimal totalCostInEth
        - int transactionCount
        + getTotalCostInEth() : BigDecimal
        + setTotalCostInEth(totalCostInEth : BigDecimal)
        + getTransactionCount() : int
        + setTransactionCount(transactionCount : int)
    }
}

package "repository" {
    interface EthereumPriceRepository {
    }
}

package "service" {
    class EthereumPriceService {
        - EthereumPriceRepository ethereumPriceRepository
        + savePrice(price : EthereumPrice) : EthereumPrice
        + getAllPrices() : List<EthereumPrice>
        + saveEthereumPricesFromFile(filePath : String) : void
    }

    class EtherscanService {
        - String API_KEY
        + getGasCostsInEth(address : String) : List<BigDecimal>
        + getTransactionHistory(address : String) : ResponseEntity<String>
        + getGasCostSummary(address : String) : GasCostSummary
        + getGasCostsInEthWithTimestamp(address : String) : List<GasCostWithTimestamp>
    }

     class GasCostWithTimestamp {
            -BigDecimal gasCost
            -String timestamp
            +getGasCost(): BigDecimal
            +setGasCost(gasCost: BigDecimal): void
            +getTimestamp(): String
            +setTimestamp(timestamp: String): void
        }

}

package "controller" {
    class EthereumPriceController {
        - EthereumPriceService ethereumPriceService
        + savePrice(price : EthereumPrice) : EthereumPrice
        + getAllPrices() : List<EthereumPrice>
    }

    class EtherscanController {
        - EtherscanService etherscanService
        + getTransactionHistory(address : String) : ResponseEntity<String>
        + getGasCostsInEth(address : String) : ResponseEntity<List<BigDecimal>>
        + getGasCostSummary(address : String) : ResponseEntity<GasCostSummary>
        + getGasCostsInEthWithTimestamp(address : String) : ResponseEntity<List<GasCostWithTimestamp>>
    }
}


package "utils" {
    class EthereumPriceParser {
        +parse(filePath: String): List<EthereumPrice>
    }
}


controller.EthereumPriceController --> service.EthereumPriceService : uses
controller.EtherscanController --> service.EtherscanService : uses

EthereumPrice <-- EthereumPriceService
EthereumPriceRepository <|.. EthereumPriceService

EtherscanService --> GasCostSummary
EtherscanService --> GasCostWithTimestamp

EthereumPriceParser --> EthereumPrice




@enduml
